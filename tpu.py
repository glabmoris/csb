import math

class total_propagated_uncertainty:
	def compute(self,longitude):
longitudeSigma, latitudeSigma, ellipsoidalHeightSigma, depthSigma, xOffsetSigma, yOffsetSigma, zOffsetSigma, headingSigma, pitchSigma, rollSigma) |--> ellipsoidalHeightSigma^2*cos(latitude)^2*cos(longitude)^2 + (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))^2*depthSigma^2 + (((cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(longitude))*(depth + z_offset) + (cos(longitude)*cos(pitch)*sin(heading)*sin(latitude) - cos(heading)*cos(pitch)*sin(longitude))*x_offset + ((sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude)*sin(latitude) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(longitude))*y_offset)^2*headingSigma^2 + ((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(longitude)*sin(latitude) - 42697.6727071805*cos(latitude)^2*cos(longitude)*sin(latitude)/(-0.00669437999014140*sin(latitude)^2 + 1)^(3/2) - (cos(longitude)*cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude)*cos(longitude))*(depth + z_offset) + (cos(heading)*cos(latitude)*cos(longitude)*cos(pitch) + cos(longitude)*sin(latitude)*sin(pitch))*x_offset - (cos(longitude)*cos(pitch)*sin(latitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude)*cos(longitude))*y_offset)^2*latitudeSigma^2 + ((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(latitude)*sin(longitude) - (cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*(depth + z_offset) - (cos(heading)*cos(pitch)*sin(latitude)*sin(longitude) - cos(longitude)*cos(pitch)*sin(heading) - cos(latitude)*sin(longitude)*sin(pitch))*x_offset - (cos(latitude)*cos(pitch)*sin(longitude)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude)*sin(longitude) - (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude))*y_offset)^2*longitudeSigma^2 + ((cos(heading)*cos(longitude)*cos(pitch)*cos(roll)*sin(latitude) + cos(pitch)*cos(roll)*sin(heading)*sin(longitude) - cos(latitude)*cos(longitude)*cos(roll)*sin(pitch))*(depth + z_offset) - (cos(heading)*cos(longitude)*sin(latitude)*sin(pitch) + cos(latitude)*cos(longitude)*cos(pitch) + sin(heading)*sin(longitude)*sin(pitch))*x_offset + (cos(heading)*cos(longitude)*cos(pitch)*sin(latitude)*sin(roll) + cos(pitch)*sin(heading)*sin(longitude)*sin(roll) - cos(latitude)*cos(longitude)*sin(pitch)*sin(roll))*y_offset)^2*pitchSigma^2 + ((cos(latitude)*cos(longitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude)*sin(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(longitude))*(depth + z_offset) - (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*y_offset)^2*rollSigma^2 + (cos(heading)*cos(longitude)*cos(pitch)*sin(latitude) + cos(pitch)*sin(heading)*sin(longitude) - cos(latitude)*cos(longitude)*sin(pitch))^2*xOffsetSigma^2 + (cos(latitude)*cos(longitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude)*sin(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(longitude))^2*yOffsetSigma^2 + (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))^2*zOffsetSigma^2

(longitudeSigma, latitudeSigma, ellipsoidalHeightSigma, depthSigma, xOffsetSigma, yOffsetSigma, zOffsetSigma, headingSigma, pitchSigma, rollSigma) |--> ellipsoidalHeightSigma^2*cos(latitude)^2*cos(longitude)*sin(longitude) + (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*(cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*depthSigma^2 + (((cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(longitude))*(depth + z_offset) + (cos(longitude)*cos(pitch)*sin(heading)*sin(latitude) - cos(heading)*cos(pitch)*sin(longitude))*x_offset + ((sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude)*sin(latitude) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(longitude))*y_offset)*(((cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(latitude)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude))*(depth + z_offset) + (cos(pitch)*sin(heading)*sin(latitude)*sin(longitude) + cos(heading)*cos(longitude)*cos(pitch))*x_offset + ((sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(latitude)*sin(longitude) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude))*y_offset)*headingSigma^2 + ((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(longitude)*sin(latitude) - 42697.6727071805*cos(latitude)^2*cos(longitude)*sin(latitude)/(-0.00669437999014140*sin(latitude)^2 + 1)^(3/2) - (cos(longitude)*cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude)*cos(longitude))*(depth + z_offset) + (cos(heading)*cos(latitude)*cos(longitude)*cos(pitch) + cos(longitude)*sin(latitude)*sin(pitch))*x_offset - (cos(longitude)*cos(pitch)*sin(latitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude)*cos(longitude))*y_offset)*((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*sin(latitude)*sin(longitude) - 42697.6727071805*cos(latitude)^2*sin(latitude)*sin(longitude)/(-0.00669437999014140*sin(latitude)^2 + 1)^(3/2) - (cos(pitch)*cos(roll)*sin(latitude)*sin(longitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude)*sin(longitude))*(depth + z_offset) + (cos(heading)*cos(latitude)*cos(pitch)*sin(longitude) + sin(latitude)*sin(longitude)*sin(pitch))*x_offset - (cos(pitch)*sin(latitude)*sin(longitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude)*sin(longitude))*y_offset)*latitudeSigma^2 - ((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(latitude)*cos(longitude) - (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*(depth + z_offset) - (cos(heading)*cos(longitude)*cos(pitch)*sin(latitude) + cos(pitch)*sin(heading)*sin(longitude) - cos(latitude)*cos(longitude)*sin(pitch))*x_offset - (cos(latitude)*cos(longitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude)*sin(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(longitude))*y_offset)*((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(latitude)*sin(longitude) - (cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*(depth + z_offset) - (cos(heading)*cos(pitch)*sin(latitude)*sin(longitude) - cos(longitude)*cos(pitch)*sin(heading) - cos(latitude)*sin(longitude)*sin(pitch))*x_offset - (cos(latitude)*cos(pitch)*sin(longitude)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude)*sin(longitude) - (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude))*y_offset)*longitudeSigma^2 + ((cos(heading)*cos(longitude)*cos(pitch)*cos(roll)*sin(latitude) + cos(pitch)*cos(roll)*sin(heading)*sin(longitude) - cos(latitude)*cos(longitude)*cos(roll)*sin(pitch))*(depth + z_offset) - (cos(heading)*cos(longitude)*sin(latitude)*sin(pitch) + cos(latitude)*cos(longitude)*cos(pitch) + sin(heading)*sin(longitude)*sin(pitch))*x_offset + (cos(heading)*cos(longitude)*cos(pitch)*sin(latitude)*sin(roll) + cos(pitch)*sin(heading)*sin(longitude)*sin(roll) - cos(latitude)*cos(longitude)*sin(pitch)*sin(roll))*y_offset)*((cos(heading)*cos(pitch)*cos(roll)*sin(latitude)*sin(longitude) - cos(longitude)*cos(pitch)*cos(roll)*sin(heading) - cos(latitude)*cos(roll)*sin(longitude)*sin(pitch))*(depth + z_offset) - (cos(heading)*sin(latitude)*sin(longitude)*sin(pitch) + cos(latitude)*cos(pitch)*sin(longitude) - cos(longitude)*sin(heading)*sin(pitch))*x_offset + (cos(heading)*cos(pitch)*sin(latitude)*sin(longitude)*sin(roll) - cos(longitude)*cos(pitch)*sin(heading)*sin(roll) - cos(latitude)*sin(longitude)*sin(pitch)*sin(roll))*y_offset)*pitchSigma^2 + ((cos(latitude)*cos(longitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude)*sin(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(longitude))*(depth + z_offset) - (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*y_offset)*((cos(latitude)*cos(pitch)*sin(longitude)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude)*sin(longitude) - (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude))*(depth + z_offset) - (cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*y_offset)*rollSigma^2 + (cos(heading)*cos(longitude)*cos(pitch)*sin(latitude) + cos(pitch)*sin(heading)*sin(longitude) - cos(latitude)*cos(longitude)*sin(pitch))*(cos(heading)*cos(pitch)*sin(latitude)*sin(longitude) - cos(longitude)*cos(pitch)*sin(heading) - cos(latitude)*sin(longitude)*sin(pitch))*xOffsetSigma^2 + (cos(latitude)*cos(longitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude)*sin(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(longitude))*(cos(latitude)*cos(pitch)*sin(longitude)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude)*sin(longitude) - (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude))*yOffsetSigma^2 + (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*(cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*zOffsetSigma^2        
longitudeSigma, latitudeSigma, ellipsoidalHeightSigma, depthSigma, xOffsetSigma, yOffsetSigma, zOffsetSigma, headingSigma, pitchSigma, rollSigma) |--> ellipsoidalHeightSigma^2*cos(latitude)*cos(longitude)*sin(latitude) + (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*(cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude))*depthSigma^2 - (x_offset*cos(latitude)*cos(pitch)*sin(heading) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*(depth + z_offset)*cos(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*y_offset*cos(latitude))*(((cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(longitude))*(depth + z_offset) + (cos(longitude)*cos(pitch)*sin(heading)*sin(latitude) - cos(heading)*cos(pitch)*sin(longitude))*x_offset + ((sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude)*sin(latitude) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(longitude))*y_offset)*headingSigma^2 + ((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(longitude)*sin(latitude) - 42697.6727071805*cos(latitude)^2*cos(longitude)*sin(latitude)/(-0.00669437999014140*sin(latitude)^2 + 1)^(3/2) - (cos(longitude)*cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude)*cos(longitude))*(depth + z_offset) + (cos(heading)*cos(latitude)*cos(longitude)*cos(pitch) + cos(longitude)*sin(latitude)*sin(pitch))*x_offset - (cos(longitude)*cos(pitch)*sin(latitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude)*cos(longitude))*y_offset)*((cos(latitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude))*(depth + z_offset) + (cos(heading)*cos(pitch)*sin(latitude) - cos(latitude)*sin(pitch))*x_offset + (cos(latitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude))*y_offset - (ellipsoidalHeight + 6.33543932729282e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(latitude) - 42411.8382613839*cos(latitude)*sin(latitude)^2/(-0.00669437999014140*sin(latitude)^2 + 1)^(3/2))*latitudeSigma^2 - ((cos(heading)*cos(longitude)*cos(pitch)*cos(roll)*sin(latitude) + cos(pitch)*cos(roll)*sin(heading)*sin(longitude) - cos(latitude)*cos(longitude)*cos(roll)*sin(pitch))*(depth + z_offset) - (cos(heading)*cos(longitude)*sin(latitude)*sin(pitch) + cos(latitude)*cos(longitude)*cos(pitch) + sin(heading)*sin(longitude)*sin(pitch))*x_offset + (cos(heading)*cos(longitude)*cos(pitch)*sin(latitude)*sin(roll) + cos(pitch)*sin(heading)*sin(longitude)*sin(roll) - cos(latitude)*cos(longitude)*sin(pitch)*sin(roll))*y_offset)*((cos(heading)*cos(latitude)*cos(pitch)*cos(roll) + cos(roll)*sin(latitude)*sin(pitch))*(depth + z_offset) - (cos(heading)*cos(latitude)*sin(pitch) - cos(pitch)*sin(latitude))*x_offset + (cos(heading)*cos(latitude)*cos(pitch)*sin(roll) + sin(latitude)*sin(pitch)*sin(roll))*y_offset)*pitchSigma^2 + ((cos(latitude)*cos(longitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude)*sin(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(longitude))*(depth + z_offset) - (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*y_offset)*((cos(pitch)*sin(latitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude))*(depth + z_offset) - (cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude))*y_offset)*rollSigma^2 - (cos(heading)*cos(longitude)*cos(pitch)*sin(latitude) + cos(pitch)*sin(heading)*sin(longitude) - cos(latitude)*cos(longitude)*sin(pitch))*(cos(heading)*cos(latitude)*cos(pitch) + sin(latitude)*sin(pitch))*xOffsetSigma^2 + (cos(latitude)*cos(longitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude)*sin(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(longitude))*(cos(pitch)*sin(latitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude))*yOffsetSigma^2 + (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*(cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude))*zOffsetSigma^2]

[(longitudeSigma, latitudeSigma, ellipsoidalHeightSigma, depthSigma, xOffsetSigma, yOffsetSigma, zOffsetSigma, headingSigma, pitchSigma, rollSigma) |--> ellipsoidalHeightSigma^2*cos(latitude)^2*cos(longitude)*sin(longitude) + (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*(cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*depthSigma^2 + (((cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(longitude))*(depth + z_offset) + (cos(longitude)*cos(pitch)*sin(heading)*sin(latitude) - cos(heading)*cos(pitch)*sin(longitude))*x_offset + ((sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude)*sin(latitude) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(longitude))*y_offset)*(((cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(latitude)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude))*(depth + z_offset) + (cos(pitch)*sin(heading)*sin(latitude)*sin(longitude) + cos(heading)*cos(longitude)*cos(pitch))*x_offset + ((sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(latitude)*sin(longitude) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude))*y_offset)*headingSigma^2 + ((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(longitude)*sin(latitude) - 42697.6727071805*cos(latitude)^2*cos(longitude)*sin(latitude)/(-0.00669437999014140*sin(latitude)^2 + 1)^(3/2) - (cos(longitude)*cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude)*cos(longitude))*(depth + z_offset) + (cos(heading)*cos(latitude)*cos(longitude)*cos(pitch) + cos(longitude)*sin(latitude)*sin(pitch))*x_offset - (cos(longitude)*cos(pitch)*sin(latitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude)*cos(longitude))*y_offset)*((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*sin(latitude)*sin(longitude) - 42697.6727071805*cos(latitude)^2*sin(latitude)*sin(longitude)/(-0.00669437999014140*sin(latitude)^2 + 1)^(3/2) - (cos(pitch)*cos(roll)*sin(latitude)*sin(longitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude)*sin(longitude))*(depth + z_offset) + (cos(heading)*cos(latitude)*cos(pitch)*sin(longitude) + sin(latitude)*sin(longitude)*sin(pitch))*x_offset - (cos(pitch)*sin(latitude)*sin(longitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude)*sin(longitude))*y_offset)*latitudeSigma^2 - ((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(latitude)*cos(longitude) - (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*(depth + z_offset) - (cos(heading)*cos(longitude)*cos(pitch)*sin(latitude) + cos(pitch)*sin(heading)*sin(longitude) - cos(latitude)*cos(longitude)*sin(pitch))*x_offset - (cos(latitude)*cos(longitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude)*sin(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(longitude))*y_offset)*((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(latitude)*sin(longitude) - (cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*(depth + z_offset) - (cos(heading)*cos(pitch)*sin(latitude)*sin(longitude) - cos(longitude)*cos(pitch)*sin(heading) - cos(latitude)*sin(longitude)*sin(pitch))*x_offset - (cos(latitude)*cos(pitch)*sin(longitude)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude)*sin(longitude) - (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude))*y_offset)*longitudeSigma^2 + ((cos(heading)*cos(longitude)*cos(pitch)*cos(roll)*sin(latitude) + cos(pitch)*cos(roll)*sin(heading)*sin(longitude) - cos(latitude)*cos(longitude)*cos(roll)*sin(pitch))*(depth + z_offset) - (cos(heading)*cos(longitude)*sin(latitude)*sin(pitch) + cos(latitude)*cos(longitude)*cos(pitch) + sin(heading)*sin(longitude)*sin(pitch))*x_offset + (cos(heading)*cos(longitude)*cos(pitch)*sin(latitude)*sin(roll) + cos(pitch)*sin(heading)*sin(longitude)*sin(roll) - cos(latitude)*cos(longitude)*sin(pitch)*sin(roll))*y_offset)*((cos(heading)*cos(pitch)*cos(roll)*sin(latitude)*sin(longitude) - cos(longitude)*cos(pitch)*cos(roll)*sin(heading) - cos(latitude)*cos(roll)*sin(longitude)*sin(pitch))*(depth + z_offset) - (cos(heading)*sin(latitude)*sin(longitude)*sin(pitch) + cos(latitude)*cos(pitch)*sin(longitude) - cos(longitude)*sin(heading)*sin(pitch))*x_offset + (cos(heading)*cos(pitch)*sin(latitude)*sin(longitude)*sin(roll) - cos(longitude)*cos(pitch)*sin(heading)*sin(roll) - cos(latitude)*sin(longitude)*sin(pitch)*sin(roll))*y_offset)*pitchSigma^2 + ((cos(latitude)*cos(longitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude)*sin(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(longitude))*(depth + z_offset) - (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*y_offset)*((cos(latitude)*cos(pitch)*sin(longitude)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude)*sin(longitude) - (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude))*(depth + z_offset) - (cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*y_offset)*rollSigma^2 + (cos(heading)*cos(longitude)*cos(pitch)*sin(latitude) + cos(pitch)*sin(heading)*sin(longitude) - cos(latitude)*cos(longitude)*sin(pitch))*(cos(heading)*cos(pitch)*sin(latitude)*sin(longitude) - cos(longitude)*cos(pitch)*sin(heading) - cos(latitude)*sin(longitude)*sin(pitch))*xOffsetSigma^2 + (cos(latitude)*cos(longitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude)*sin(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(longitude))*(cos(latitude)*cos(pitch)*sin(longitude)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude)*sin(longitude) - (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude))*yOffsetSigma^2 + (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*(cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*zOffsetSigma^2    
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        (longitudeSigma, latitudeSigma, ellipsoidalHeightSigma, depthSigma, xOffsetSigma, yOffsetSigma, zOffsetSigma, headingSigma, pitchSigma, rollSigma) |--> ellipsoidalHeightSigma^2*cos(latitude)^2*sin(longitude)^2 + (cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))^2*depthSigma^2 + (((cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(latitude)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude))*(depth + z_offset) + (cos(pitch)*sin(heading)*sin(latitude)*sin(longitude) + cos(heading)*cos(longitude)*cos(pitch))*x_offset + ((sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(latitude)*sin(longitude) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude))*y_offset)^2*headingSigma^2 + ((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*sin(latitude)*sin(longitude) - 42697.6727071805*cos(latitude)^2*sin(latitude)*sin(longitude)/(-0.00669437999014140*sin(latitude)^2 + 1)^(3/2) - (cos(pitch)*cos(roll)*sin(latitude)*sin(longitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude)*sin(longitude))*(depth + z_offset) + (cos(heading)*cos(latitude)*cos(pitch)*sin(longitude) + sin(latitude)*sin(longitude)*sin(pitch))*x_offset - (cos(pitch)*sin(latitude)*sin(longitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude)*sin(longitude))*y_offset)^2*latitudeSigma^2 + ((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(latitude)*cos(longitude) - (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*(depth + z_offset) - (cos(heading)*cos(longitude)*cos(pitch)*sin(latitude) + cos(pitch)*sin(heading)*sin(longitude) - cos(latitude)*cos(longitude)*sin(pitch))*x_offset - (cos(latitude)*cos(longitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude)*sin(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(longitude))*y_offset)^2*longitudeSigma^2 + ((cos(heading)*cos(pitch)*cos(roll)*sin(latitude)*sin(longitude) - cos(longitude)*cos(pitch)*cos(roll)*sin(heading) - cos(latitude)*cos(roll)*sin(longitude)*sin(pitch))*(depth + z_offset) - (cos(heading)*sin(latitude)*sin(longitude)*sin(pitch) + cos(latitude)*cos(pitch)*sin(longitude) - cos(longitude)*sin(heading)*sin(pitch))*x_offset + (cos(heading)*cos(pitch)*sin(latitude)*sin(longitude)*sin(roll) - cos(longitude)*cos(pitch)*sin(heading)*sin(roll) - cos(latitude)*sin(longitude)*sin(pitch)*sin(roll))*y_offset)^2*pitchSigma^2 + ((cos(latitude)*cos(pitch)*sin(longitude)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude)*sin(longitude) - (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude))*(depth + z_offset) - (cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*y_offset)^2*rollSigma^2 + (cos(heading)*cos(pitch)*sin(latitude)*sin(longitude) - cos(longitude)*cos(pitch)*sin(heading) - cos(latitude)*sin(longitude)*sin(pitch))^2*xOffsetSigma^2 + (cos(latitude)*cos(pitch)*sin(longitude)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude)*sin(longitude) - (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude))^2*yOffsetSigma^2 + (cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))^2*zOffsetSigma^2  
longitudeSigma, latitudeSigma, ellipsoidalHeightSigma, depthSigma, xOffsetSigma, yOffsetSigma, zOffsetSigma, headingSigma, pitchSigma, rollSigma) |--> ellipsoidalHeightSigma^2*cos(latitude)*sin(latitude)*sin(longitude) + (cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*(cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude))*depthSigma^2 - (x_offset*cos(latitude)*cos(pitch)*sin(heading) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*(depth + z_offset)*cos(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*y_offset*cos(latitude))*(((cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(latitude)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude))*(depth + z_offset) + (cos(pitch)*sin(heading)*sin(latitude)*sin(longitude) + cos(heading)*cos(longitude)*cos(pitch))*x_offset + ((sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(latitude)*sin(longitude) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude))*y_offset)*headingSigma^2 + ((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*sin(latitude)*sin(longitude) - 42697.6727071805*cos(latitude)^2*sin(latitude)*sin(longitude)/(-0.00669437999014140*sin(latitude)^2 + 1)^(3/2) - (cos(pitch)*cos(roll)*sin(latitude)*sin(longitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude)*sin(longitude))*(depth + z_offset) + (cos(heading)*cos(latitude)*cos(pitch)*sin(longitude) + sin(latitude)*sin(longitude)*sin(pitch))*x_offset - (cos(pitch)*sin(latitude)*sin(longitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude)*sin(longitude))*y_offset)*((cos(latitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude))*(depth + z_offset) + (cos(heading)*cos(pitch)*sin(latitude) - cos(latitude)*sin(pitch))*x_offset + (cos(latitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude))*y_offset - (ellipsoidalHeight + 6.33543932729282e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(latitude) - 42411.8382613839*cos(latitude)*sin(latitude)^2/(-0.00669437999014140*sin(latitude)^2 + 1)^(3/2))*latitudeSigma^2 - ((cos(heading)*cos(pitch)*cos(roll)*sin(latitude)*sin(longitude) - cos(longitude)*cos(pitch)*cos(roll)*sin(heading) - cos(latitude)*cos(roll)*sin(longitude)*sin(pitch))*(depth + z_offset) - (cos(heading)*sin(latitude)*sin(longitude)*sin(pitch) + cos(latitude)*cos(pitch)*sin(longitude) - cos(longitude)*sin(heading)*sin(pitch))*x_offset + (cos(heading)*cos(pitch)*sin(latitude)*sin(longitude)*sin(roll) - cos(longitude)*cos(pitch)*sin(heading)*sin(roll) - cos(latitude)*sin(longitude)*sin(pitch)*sin(roll))*y_offset)*((cos(heading)*cos(latitude)*cos(pitch)*cos(roll) + cos(roll)*sin(latitude)*sin(pitch))*(depth + z_offset) - (cos(heading)*cos(latitude)*sin(pitch) - cos(pitch)*sin(latitude))*x_offset + (cos(heading)*cos(latitude)*cos(pitch)*sin(roll) + sin(latitude)*sin(pitch)*sin(roll))*y_offset)*pitchSigma^2 + ((cos(latitude)*cos(pitch)*sin(longitude)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude)*sin(longitude) - (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude))*(depth + z_offset) - (cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*y_offset)*((cos(pitch)*sin(latitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude))*(depth + z_offset) - (cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude))*y_offset)*rollSigma^2 - (cos(heading)*cos(pitch)*sin(latitude)*sin(longitude) - cos(longitude)*cos(pitch)*sin(heading) - cos(latitude)*sin(longitude)*sin(pitch))*(cos(heading)*cos(latitude)*cos(pitch) + sin(latitude)*sin(pitch))*xOffsetSigma^2 + (cos(latitude)*cos(pitch)*sin(longitude)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude)*sin(longitude) - (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude))*(cos(pitch)*sin(latitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude))*yOffsetSigma^2 + (cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*(cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude))*zOffsetSigma^2]
longitudeSigma, latitudeSigma, ellipsoidalHeightSigma, depthSigma, xOffsetSigma, yOffsetSigma, zOffsetSigma, headingSigma, pitchSigma, rollSigma) |--> ellipsoidalHeightSigma^2*cos(latitude)*cos(longitude)*sin(latitude) + (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*(cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude))*depthSigma^2 - (x_offset*cos(latitude)*cos(pitch)*sin(heading) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*(depth + z_offset)*cos(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*y_offset*cos(latitude))*(((cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(longitude))*(depth + z_offset) + (cos(longitude)*cos(pitch)*sin(heading)*sin(latitude) - cos(heading)*cos(pitch)*sin(longitude))*x_offset + ((sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude)*sin(latitude) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(longitude))*y_offset)*headingSigma^2 + ((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(longitude)*sin(latitude) - 42697.6727071805*cos(latitude)^2*cos(longitude)*sin(latitude)/(-0.00669437999014140*sin(latitude)^2 + 1)^(3/2) - (cos(longitude)*cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude)*cos(longitude))*(depth + z_offset) + (cos(heading)*cos(latitude)*cos(longitude)*cos(pitch) + cos(longitude)*sin(latitude)*sin(pitch))*x_offset - (cos(longitude)*cos(pitch)*sin(latitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude)*cos(longitude))*y_offset)*((cos(latitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude))*(depth + z_offset) + (cos(heading)*cos(pitch)*sin(latitude) - cos(latitude)*sin(pitch))*x_offset + (cos(latitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude))*y_offset - (ellipsoidalHeight + 6.33543932729282e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(latitude) - 42411.8382613839*cos(latitude)*sin(latitude)^2/(-0.00669437999014140*sin(latitude)^2 + 1)^(3/2))*latitudeSigma^2 - ((cos(heading)*cos(longitude)*cos(pitch)*cos(roll)*sin(latitude) + cos(pitch)*cos(roll)*sin(heading)*sin(longitude) - cos(latitude)*cos(longitude)*cos(roll)*sin(pitch))*(depth + z_offset) - (cos(heading)*cos(longitude)*sin(latitude)*sin(pitch) + cos(latitude)*cos(longitude)*cos(pitch) + sin(heading)*sin(longitude)*sin(pitch))*x_offset + (cos(heading)*cos(longitude)*cos(pitch)*sin(latitude)*sin(roll) + cos(pitch)*sin(heading)*sin(longitude)*sin(roll) - cos(latitude)*cos(longitude)*sin(pitch)*sin(roll))*y_offset)*((cos(heading)*cos(latitude)*cos(pitch)*cos(roll) + cos(roll)*sin(latitude)*sin(pitch))*(depth + z_offset) - (cos(heading)*cos(latitude)*sin(pitch) - cos(pitch)*sin(latitude))*x_offset + (cos(heading)*cos(latitude)*cos(pitch)*sin(roll) + sin(latitude)*sin(pitch)*sin(roll))*y_offset)*pitchSigma^2 + ((cos(latitude)*cos(longitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude)*sin(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(longitude))*(depth + z_offset) - (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*y_offset)*((cos(pitch)*sin(latitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude))*(depth + z_offset) - (cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude))*y_offset)*rollSigma^2 - (cos(heading)*cos(longitude)*cos(pitch)*sin(latitude) + cos(pitch)*sin(heading)*sin(longitude) - cos(latitude)*cos(longitude)*sin(pitch))*(cos(heading)*cos(latitude)*cos(pitch) + sin(latitude)*sin(pitch))*xOffsetSigma^2 + (cos(latitude)*cos(longitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude)*sin(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(longitude))*(cos(pitch)*sin(latitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude))*yOffsetSigma^2 + (cos(latitude)*cos(longitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude)*sin(latitude) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(longitude))*(cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude))*zOffsetSigma^2  
longitudeSigma, latitudeSigma, ellipsoidalHeightSigma, depthSigma, xOffsetSigma, yOffsetSigma, zOffsetSigma, headingSigma, pitchSigma, rollSigma) |--> ellipsoidalHeightSigma^2*cos(latitude)*sin(latitude)*sin(longitude) + (cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*(cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude))*depthSigma^2 - (x_offset*cos(latitude)*cos(pitch)*sin(heading) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*(depth + z_offset)*cos(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*y_offset*cos(latitude))*(((cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*sin(latitude)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(longitude))*(depth + z_offset) + (cos(pitch)*sin(heading)*sin(latitude)*sin(longitude) + cos(heading)*cos(longitude)*cos(pitch))*x_offset + ((sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*sin(latitude)*sin(longitude) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(longitude))*y_offset)*headingSigma^2 + ((ellipsoidalHeight + 6.37813700000000e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*sin(latitude)*sin(longitude) - 42697.6727071805*cos(latitude)^2*sin(latitude)*sin(longitude)/(-0.00669437999014140*sin(latitude)^2 + 1)^(3/2) - (cos(pitch)*cos(roll)*sin(latitude)*sin(longitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude)*sin(longitude))*(depth + z_offset) + (cos(heading)*cos(latitude)*cos(pitch)*sin(longitude) + sin(latitude)*sin(longitude)*sin(pitch))*x_offset - (cos(pitch)*sin(latitude)*sin(longitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude)*sin(longitude))*y_offset)*((cos(latitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude))*(depth + z_offset) + (cos(heading)*cos(pitch)*sin(latitude) - cos(latitude)*sin(pitch))*x_offset + (cos(latitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude))*y_offset - (ellipsoidalHeight + 6.33543932729282e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(latitude) - 42411.8382613839*cos(latitude)*sin(latitude)^2/(-0.00669437999014140*sin(latitude)^2 + 1)^(3/2))*latitudeSigma^2 - ((cos(heading)*cos(pitch)*cos(roll)*sin(latitude)*sin(longitude) - cos(longitude)*cos(pitch)*cos(roll)*sin(heading) - cos(latitude)*cos(roll)*sin(longitude)*sin(pitch))*(depth + z_offset) - (cos(heading)*sin(latitude)*sin(longitude)*sin(pitch) + cos(latitude)*cos(pitch)*sin(longitude) - cos(longitude)*sin(heading)*sin(pitch))*x_offset + (cos(heading)*cos(pitch)*sin(latitude)*sin(longitude)*sin(roll) - cos(longitude)*cos(pitch)*sin(heading)*sin(roll) - cos(latitude)*sin(longitude)*sin(pitch)*sin(roll))*y_offset)*((cos(heading)*cos(latitude)*cos(pitch)*cos(roll) + cos(roll)*sin(latitude)*sin(pitch))*(depth + z_offset) - (cos(heading)*cos(latitude)*sin(pitch) - cos(pitch)*sin(latitude))*x_offset + (cos(heading)*cos(latitude)*cos(pitch)*sin(roll) + sin(latitude)*sin(pitch)*sin(roll))*y_offset)*pitchSigma^2 + ((cos(latitude)*cos(pitch)*sin(longitude)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude)*sin(longitude) - (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude))*(depth + z_offset) - (cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*y_offset)*((cos(pitch)*sin(latitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude))*(depth + z_offset) - (cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude))*y_offset)*rollSigma^2 - (cos(heading)*cos(pitch)*sin(latitude)*sin(longitude) - cos(longitude)*cos(pitch)*sin(heading) - cos(latitude)*sin(longitude)*sin(pitch))*(cos(heading)*cos(latitude)*cos(pitch) + sin(latitude)*sin(pitch))*xOffsetSigma^2 + (cos(latitude)*cos(pitch)*sin(longitude)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude)*sin(longitude) - (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*cos(longitude))*(cos(pitch)*sin(latitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude))*yOffsetSigma^2 + (cos(latitude)*cos(pitch)*cos(roll)*sin(longitude) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude)*sin(longitude) - (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*cos(longitude))*(cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude))*zOffsetSigma^2          
longitudeSigma, latitudeSigma, ellipsoidalHeightSigma, depthSigma, xOffsetSigma, yOffsetSigma, zOffsetSigma, headingSigma, pitchSigma, rollSigma) |--> (cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude))^2*depthSigma^2 + (x_offset*cos(latitude)*cos(pitch)*sin(heading) + (cos(roll)*sin(heading)*sin(pitch) - cos(heading)*sin(roll))*(depth + z_offset)*cos(latitude) + (sin(heading)*sin(pitch)*sin(roll) + cos(heading)*cos(roll))*y_offset*cos(latitude))^2*headingSigma^2 + ((cos(latitude)*cos(pitch)*cos(roll) + (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*sin(latitude))*(depth + z_offset) + (cos(heading)*cos(pitch)*sin(latitude) - cos(latitude)*sin(pitch))*x_offset + (cos(latitude)*cos(pitch)*sin(roll) + (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*sin(latitude))*y_offset - (ellipsoidalHeight + 6.33543932729282e6/sqrt(-0.00669437999014140*sin(latitude)^2 + 1))*cos(latitude) - 42411.8382613839*cos(latitude)*sin(latitude)^2/(-0.00669437999014140*sin(latitude)^2 + 1)^(3/2))^2*latitudeSigma^2 + ((cos(heading)*cos(latitude)*cos(pitch)*cos(roll) + cos(roll)*sin(latitude)*sin(pitch))*(depth + z_offset) - (cos(heading)*cos(latitude)*sin(pitch) - cos(pitch)*sin(latitude))*x_offset + (cos(heading)*cos(latitude)*cos(pitch)*sin(roll) + sin(latitude)*sin(pitch)*sin(roll))*y_offset)^2*pitchSigma^2 + ((cos(pitch)*sin(latitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude))*(depth + z_offset) - (cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude))*y_offset)^2*rollSigma^2 + (cos(heading)*cos(latitude)*cos(pitch) + sin(latitude)*sin(pitch))^2*xOffsetSigma^2 + (cos(pitch)*sin(latitude)*sin(roll) - (cos(heading)*sin(pitch)*sin(roll) - cos(roll)*sin(heading))*cos(latitude))^2*yOffsetSigma^2 + (cos(pitch)*cos(roll)*sin(latitude) - (cos(heading)*cos(roll)*sin(pitch) + sin(heading)*sin(roll))*cos(latitude))^2*zOffsetSigma^2 + ellipsoidalHeightSigma^2*sin(latitude)^2]
